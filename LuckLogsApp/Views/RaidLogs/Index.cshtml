@model LuckLogsApp.Models.ViewModel

@{
    ViewBag.Title = "Index";
}
<p>@Html.Raw( TempData["Debug"])</p>
<nav class="navbar navbar-default ">
    <div class="container-fluid">
        <ul class="nav navbar-nav navbar-right">
            <li><a href="#" data-toggle="modal" data-target="#uploadModal"><span class="glyphicon glyphicon-upload"></span>Upload </a></li>
        </ul>
</div>
    </nav>
        <h2>Logs Database</h2>
       <div class="alert alert-dismissible alert-danger">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <strong>Unless you are Admin please leave</strong> <br />
        </div>
        
        <table class="table">
            <tr>

                <th>Log ID</th>
                <th>
                    EVTCFile
                </th>
                <th>
                    HTMLFile
                </th>
                <th>
                    Boss
                </th>
                <th>
                    Success
                </th>
                <th>
                    Date
                </th>
                <th>
                    KillTime
                </th>
               
                <th></th>
            </tr>

            @foreach (var item in Model.DbList)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EVTCFile)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HtmlFile)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BossName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Sucess)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.KillTime)
                    </td>
                 
                    <td>
                        @*@Html.ActionLink("Edit", "Edit", new { id = item.ID }) |*@
                        @Html.ActionLink("Details", "Details", new { id = item.ID }) 
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                        @Html.ActionLink("Parse","Parse", new { id = item.ID })
                        @Html.ActionLink("Scrape", "Scrape", new { id = item.ID })
                        
                    </td>
                </tr>
            }

        </table>

        <!-- Upload Modal -->
        <div class="modal fade" id="uploadModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel3">
            <div class="modal-dialog" role="document">
                <div class="modal-content">

                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel3">Upload Logs</h4>
                    </div>

                    <div class="modal-body">
                        <h2>Drag and Drop EVTCs or htmls of raidheroes</h2>
                        <div id="dropArea">Drop files here</div>
                        <h4>Uploaded Files:</h4>
                        <ul class="list-group" id="uploadList"></ul>
                        <h5>@Html.ActionLink("Reload Page", "Index", "RaidLogs")</h5>
                    </div>

                </div>
            </div>
        </div>
        <script type="text/javascript">
        $(function () {
            $('#dropArea').filedrop({
                url: '@Url.Action("UploadProcess")',
                allowedfileextensions: ['.evtc' ,'.html'],
                paramname: 'files',
                maxfiles: 15,
                maxfilesize: 20, // in MB
                dragOver: function () {
                    $('#dropArea').addClass('active-drop');
                },
                dragLeave: function () {
                    $('#dropArea').removeClass('active-drop');
                },
                drop: function () {
                    $('#dropArea').removeClass('active-drop');
                },
                afterAll: function (e) {
                    $('#dropArea').html('file(s) uploaded successfully');
                },
                uploadFinished: function (i, file, response, time) {
                    $('#uploadList').append('<li class="list-group-item">'+file.name+'</li>')
                }
            })
        })
        </script>
        
