
@{
    ViewBag.Title = "Player Performance";
}
@model LuckLogsApp.Models.ViewModel
@{string playerName = Model.PlList.FirstOrDefault().accountName; }
<h2>@playerName 's Performance</h2>

<ul class="nav nav-tabs" id="playertabs">
    <li class="active"><a href="#summary" data-toggle="tab" aria-expanded="false">Summary</a></li>
    <li class=""><a href="#roster" data-toggle="tab" aria-expanded="true">Characters </a></li>
    <li class=""><a href="#encounterHistory" data-toggle="tab" aria-expanded="true">History </a></li>
    <li class="dropdown">
        <a class="dropdown-toggle" data-toggle="dropdown" href="#" aria-expanded="true">
            Statistics <span class="caret"></span>
        </a>
        <ul class="dropdown-menu">
            <li class=""><a href="#statsVG" data-toggle="tab" aria-expanded="false">Vale Guardian</a></li>
            <li class=""><a href="#statsGors" data-toggle="tab" aria-expanded="false">Gorseval</a></li>
            <li class=""><a href="#statsSab" data-toggle="tab" aria-expanded="false">Sabatha</a></li>
            <li class=""><a href="#statsSloth" data-toggle="tab" aria-expanded="false">Slothasor</a></li>
            <li class=""><a href="#statsMat" data-toggle="tab" aria-expanded="false">Matthias</a></li>
            <li class=""><a href="#statsKC" data-toggle="tab" aria-expanded="false">Keep Consturct</a></li>
            <li class=""><a href="#statsXera" data-toggle="tab" aria-expanded="false">Xera</a></li>
            <li class=""><a href="#statsCairn" data-toggle="tab" aria-expanded="false">Cairn</a></li>
            <li class=""><a href="#statsMO" data-toggle="tab" aria-expanded="false">Overseer</a></li>
            <li class=""><a href="#statsSam" data-toggle="tab" aria-expanded="false">Samarog</a></li>
            <li class=""><a href="#statsDiem" data-toggle="tab" aria-expanded="false">Deimos</a></li>
           
        </ul>
   </li>
</ul>
@{ var charList = Model.PlList.Select(x => x.playerName).Distinct();
    var cardList = new List<LuckLogsApp.Models.CharacterCardEntry>();

    foreach (var character in charList) {
        foreach (var prof in Model.PlList.Where(x => x.playerName == character).Select(y => y.profession).Distinct()) {
            foreach (var build in Model.PlList.Where(x => x.playerName == character).Where(y => y.profession == prof).Select(z => z.build).Distinct())
            {
                var card = new LuckLogsApp.Models.CharacterCardEntry();
                card.name = character;
                card.profession = prof;
                card.build = build;
                card.entrys = Model.PlList.Where(x => x.playerName == character).Where(y => y.profession == prof).Where(z => z.build == build).ToList().Count;
                cardList.Add(card);

            }
        }
    }
    cardList = cardList.OrderByDescending(x => x.entrys).ToList();
    }
<div id="myTabContent" class="tab-content">
    <div class="tab-pane fade active in" id="summary">
        <div class="row">
            <h3>Most Played Builds</h3>
            @for (int v = 0; v < 6; v++) {
                if (cardList.Count > v) {
                 <div class=" well well-sm col-md-2">
                     
                     <h4>@cardList[v].name</h4>
                     <img src="@ViewData[cardList[v].profession]" alt="@cardList[v].profession" title="@cardList[v].profession" height="30" width="30">
                     <p>@cardList[v].profession
                    @if (cardList[v].build == "Condi")
                    {
                        <span class="label label-warning">Condi</span>
                    }
                    else
                    {
                        <span class="label label-danger">Power</span>
                    }
                     <br />
                     Played: @cardList[v].entrys times
                     </p>
                 </div>
                }
            }

        </div>
        <div class="row">
            <div class="col-md-4">
                <table class="table table-striped table-hover ">
                    <thead>
                        <tr>
                            <th>Stats</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Characters Owned:</td>
                            <td align="right">@cardList.Select(x => x.name).Distinct().ToList().Count</td>
                        </tr>
                        <tr>
                            <td>Builds Used:</td>
                            <td align="right">@cardList.Count</td>
                        </tr>
                        <tr>
                            <td>Bosses Killed:</td>
                            <td align="right">@Model.GroupLogList.Where(x => x.Sucess).ToList().Count</td>
                        </tr>
                        <tr>
                            <td>Play time:</td>
                            <td align="right">@{TimeSpan playtime = TimeSpan.FromSeconds(Model.GroupLogList.Sum(x => x.KillTime.TotalSeconds));} @playtime.Days days, @playtime.Hours hours, @playtime.Minutes min</td>
                        </tr>
                        <tr>
                            <td>Raider since:</td>
                            <td align="right">@Model.GroupLogList.OrderByDescending(x => x.killDate).LastOrDefault().killDate.Substring(0, 8)</td>
                        </tr>
                        <tr>
                            <td>Times Downed:</td>
                            <td align="right">@Model.PlList.Sum(x => x.downs)</td>
                        </tr>
                        <tr>
                            <td>Times Killed:</td>
                            <td align="right">@{int timesDied = 0; TimeSpan timeDead = TimeSpan.Zero; foreach (var playlog in Model.PlList) { if (playlog.timeDead != TimeSpan.Zero) { timesDied++; timeDead = timeDead + playlog.timeDead; } } }
                                @timesDied
                            </td>
                        </tr>
                        <tr>
                            <td>Time Dead:</td>
                            <td align="right">@timeDead.Hours hours @timeDead.Minutes min @timeDead.Seconds s</td>
                        </tr>
                        <tr>
                            <td>Percent Time Alive:</td>
                            <td align="right">@(100 - Math.Round((double)timeDead.TotalSeconds / (double)playtime.TotalSeconds, 2)) %</td>
                        </tr>
                    </tbody>
                </table>

            </div>
             <div class=" well well-sm col-md-8">
                 <div id="rolegraph" style="height:auto;width:auto"></div>
                 <script>
                 @{
                     int chronoplayed = Model.PlList.Where(x => x.profession == "Chronomancer").Count();
                     int druidPlayed = Model.PlList.Where(x => x.profession == "Druid").Count();
                     int warplayed = Model.PlList.Where(x => x.profession == "Berserker").Count();
                     int dmgPlayed = Model.PlList.Count() - chronoplayed - druidPlayed - warplayed;

                 }
                     var data = [
                         {
                             x: ['Damage', 'Chrono', 'Druid','Berzerker'],
                             y: [@dmgPlayed, @chronoplayed,@druidPlayed,@warplayed],
                             type: 'bar'
                         }
                     ];
                     var layout = {
                         title: 'Kills by Role',
                         font: { color: '#ffffff' },
                         paper_bgcolor: 'rgba(0,0,0,0)',
                         plot_bgcolor: 'rgba(0,0,0,0)'

                     };
                     Plotly.newPlot('rolegraph', data, layout);</script>
             </div>
        </div>
    </div>
    <div class="tab-pane fade  in" id="roster">
       @{ int rowcount = 0;}
        @for (int y = 1; y <= Math.Ceiling((double)cardList.Select(x => x.name).Distinct().Count() / 4.00);y++ ){

        <div class="row">
            @for (var i = 1; i <= 4; i++)
            {
                rowcount++;
                if (cardList.Select(x => x.name).Distinct().ToList().Count > (rowcount-1)) {
                    var character = cardList.Select(x => x.name).Distinct().ToList()[rowcount-1];
                <div class=" col-md-3">
                    <ul class="list-group">
                        <li class="list-group-item" style="background-color:@ViewData["Color-" + cardList.Where(x => x.name == character).First().profession];color:black"><b>@character</b></li>
                        @foreach (var card in cardList.Where(x => x.name == character))
                        {

                            <li class="list-group-item">
                                @card.profession<img src="@ViewData[card.profession]" alt="@card.profession" title="@card.profession" height="18" width="18">
                                @if (card.build == "Condi")
                                {
                                    <span class="label label-warning">Condi</span>
                                }
                                else
                                {
                                    <span class="label label-danger">Power</span>
                                }
                                  @card.entrys kills
                            </li>
                        }
                    </ul>
                </div>
                }
            }
        </div>
                           }
    </div>
    <div class="tab-pane fade  in" id="encounterHistory">
        <script>$(document).ready(function () {
    $('#playerLogTable').DataTable({
        "order": [[1, "desc"]],
                    initComplete: function () {
                        this.api().columns([0, 2, 3]).every(function () {
                            var column = this;
                            var select = $('<select style="color:black;"><option value="">Show all</option></select>')
                                .appendTo($(column.footer()).empty())
                                .on('change', function () {
                                    var val = $.fn.dataTable.util.escapeRegex(
                                        $(this).val()
                                    );

                                    column
                                        .search(val ? '^' + val + '$' : '', true, false)
                                        .draw();
                                });

                            column.data().unique().sort().each(function (d, j) {
                                var val = $('<div/>').html(d).text();
                                select.append('<option value="' + val + '">' + val + '</option>');
                            });
                        });
                    }
                });
            });</script>
        <table class="table table-striped table-hover " id="playerLogTable">
            <thead>
                <tr>
                    
                    <th>
                        Boss
                    </th>
                    <th>
                        Date
                    </th>
                    <th>Character Name</th>
                    <th>Build</th>
                    <th>
                        Time
                    </th>
                    <th>
                        Link
                    </th>
                </tr>
            </thead>
            <tfoot><tr>  
                        <th>
                            Boss
                        </th>
                        <th>
                            
                        </th>
                        <th>Character Name</th>
                        <th>Build</th>
                        <th>
                           
                        </th>
                        <th>
                            
                        </th>
                </tr>
            </tfoot>
            <tbody>
                @foreach (var item in Model.GroupLogList)
                {
                    <tr data-toggle="tooltip" data-html="true" data-placement="top" title="@Html.DisplayFor(modelItem => item.CompTable)">

                        <td>
                            @if (item.Sucess)
                            {
                                <p class="text-success">  @Html.DisplayFor(modelItem => item.BossName)</p>
                            }
                            else
                            {
                                <p class="text-warning">  @Html.DisplayFor(modelItem => item.BossName)</p>
                            }
                        </td>
                        <td>
                            @{string fileString = "";
                                string dateString = "";
                                if (item.EVTCFile != null)
                                {
                                    fileString = Html.DisplayFor(modelItem => item.EVTCFile).ToString();//Create Date from evtc file name
                                    dateString = fileString.Substring(fileString.Length - 20, 15);
                                }
                                else if (item.HtmlFile != null)
                                {
                                    fileString = Html.DisplayFor(modelItem => item.HtmlFile).ToString();//Create Date from evtc file name
                                    dateString = fileString.Substring(51, 15);
                                }

                                string Y = dateString.Substring(0, 4);
                                string M = dateString.Substring(4, 2);
                                string D = dateString.Substring(6, 2);
                                string H = dateString.Substring(9, 2);
                                string mn = dateString.Substring(11, 2);
                                string s = dateString.Substring(13, 2);
                                string dispDate = Y + "-" + M + "-" + D + "  " + H + ":" + mn;
                                <p>@dispDate</p>

                            }
                        </td>
                        @{var playLog = Model.PlList.Where(x => x.logID == item.ID).FirstOrDefault();}
                        <td>@playLog.playerName</td>
                        <td>@playLog.profession<img src="@ViewData[playLog.profession]" alt="@playLog.profession" title="@playLog.profession" height="18" width="18">@if (playLog.build == "Condi")
                        {
                            <span class="label label-warning">Condi</span>
                        }
                        else
                        {
                            <span class="label label-danger">Power</span>
                        }</td>
                        <td>
                            @Html.DisplayFor(modelItem => item.KillTime)
                        </td>
                        <td>
                            <a href="@Url.Action("Logs", "Home", new { id = item.ID})" class="btn btn-success btn-sm">Open</a>


                        </td>

                    </tr>
                                }
            </tbody>
        </table>

    </div>

    
    <div class="tab-pane fade in" id="statsVG">
        <h3>Vale Guardian</h3>
        @{var customViewData = Model; customViewData.DPSPlayerList = Model.PlList.Where(x => x.bossName == "Vale Guardian").ToList();customViewData.PartialID = 1;}
        @Html.Partial("PlayerStatPartial", customViewData)
    </div>
    <div class="tab-pane fade in" id="statsGors">
        <h3>Gorseval</h3>
        @{  customViewData.DPSPlayerList = Model.PlList.Where(x => x.bossName == "Gorseval the Multifarious").ToList(); customViewData.PartialID = 2;}
        @Html.Partial("PlayerStatPartial", customViewData)
    </div>
    <div class="tab-pane fade in" id="statsSab">
        <h3>Sabetha the Saboteur</h3>
        @{  customViewData.DPSPlayerList = Model.PlList.Where(x => x.bossName == "Sabetha the Saboteur").ToList(); customViewData.PartialID = 3;}
        @Html.Partial("PlayerStatPartial", customViewData)
    </div>
    <div class="tab-pane fade in" id="statsSloth">
        <h3>Slothasor</h3>
        @{  customViewData.DPSPlayerList = Model.PlList.Where(x => x.bossName == "Slothasor").ToList(); customViewData.PartialID = 4;}
        @Html.Partial("PlayerStatPartial", customViewData)
    </div>
    <div class="tab-pane fade in" id="statsMat">
        <h3>Matthias Gabrel</h3>
        @{  customViewData.DPSPlayerList = Model.PlList.Where(x => x.bossName == "Matthias Gabrel").ToList(); customViewData.PartialID = 5;}
        @Html.Partial("PlayerStatPartial", customViewData)
    </div>
    <div class="tab-pane fade in" id="statsKC">
        <h3>Keep Construct</h3>
        @{  customViewData.DPSPlayerList = Model.PlList.Where(x => x.bossName == "Keep Construct").ToList(); customViewData.PartialID = 6;}
        @Html.Partial("PlayerStatPartial", customViewData)
    </div>
    <div class="tab-pane fade in" id="statsXera">
        <h3>Xera</h3>
        @{  customViewData.DPSPlayerList = Model.PlList.Where(x => x.bossName == "Xera").ToList(); customViewData.PartialID = 7;}
        @Html.Partial("PlayerStatPartial", customViewData)
    </div>
    <div class="tab-pane fade in" id="statsCairn">
        <h3>Cairn the Indomitable</h3>
        @{  customViewData.DPSPlayerList = Model.PlList.Where(x => x.bossName == "Cairn the Indomitable").ToList(); customViewData.PartialID = 8;}
        @Html.Partial("PlayerStatPartial", customViewData)
    </div>
    <div class="tab-pane fade in" id="statsMO">
        <h3>Mursaat Overseer</h3>
        @{  customViewData.DPSPlayerList = Model.PlList.Where(x => x.bossName == "Mursaat Overseer").ToList(); customViewData.PartialID = 9;}
        @Html.Partial("PlayerStatPartial", customViewData)
    </div>
    <div class="tab-pane fade in" id="statsSam">
        <h3>Samarog</h3>
        @{  customViewData.DPSPlayerList = Model.PlList.Where(x => x.bossName == "Samarog").ToList(); customViewData.PartialID = 10;}
        @Html.Partial("PlayerStatPartial", customViewData)
    </div>
    <div class="tab-pane fade in" id="statsDiem">
        <h3>Deimos</h3>
        @{  customViewData.DPSPlayerList = Model.PlList.Where(x => x.bossName == "Deimos").ToList(); customViewData.PartialID = 11;}
        @Html.Partial("PlayerStatPartial", customViewData)
    </div>
</div>